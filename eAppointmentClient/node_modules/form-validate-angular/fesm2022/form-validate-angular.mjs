import * as i0 from '@angular/core';
import { Directive, Input, HostListener } from '@angular/core';

class FormValidateDirective {
    constructor(el) {
        this.el = el;
        this.autoValidateMessage = false;
    }
    handleInputEvent(event) {
        const target = event.target;
        this.checkValidation(target);
    }
    handleSubmitEvent(event) {
        this.checkValidation();
    }
    checkValidation(target) {
        if (target) {
            this.validateElement(target);
        }
        else {
            // Form submit edildiğinde tüm form elemanlarını kontrol eder
            for (let i = 0; i < this.el.nativeElement.elements.length; i++) {
                const childElement = this.el.nativeElement.elements[i];
                this.validateElement(childElement);
            }
        }
    }
    validateElement(element) {
        if (element.validity !== undefined) {
            const elName = `[name=${element.name}] + div`;
            let divEl;
            if (element.name !== '') {
                divEl = document.querySelector(elName);
            }
            if (!element.validity.valid) {
                if (this.autoValidateMessage && divEl !== null) {
                    divEl.innerHTML = element.validationMessage;
                }
                element.classList.add('is-invalid');
            }
            else {
                element.classList.remove('is-invalid');
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: FormValidateDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.0.5", type: FormValidateDirective, isStandalone: true, selector: "[formValidate]", inputs: { autoValidateMessage: "autoValidateMessage" }, host: { listeners: { "keyup": "handleInputEvent($event)", "change": "handleInputEvent($event)", "submit": "handleSubmitEvent($event)" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: FormValidateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[formValidate]',
                    standalone: true
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { autoValidateMessage: [{
                type: Input,
                args: ["autoValidateMessage"]
            }], handleInputEvent: [{
                type: HostListener,
                args: ['keyup', ['$event']]
            }, {
                type: HostListener,
                args: ['change', ['$event']]
            }], handleSubmitEvent: [{
                type: HostListener,
                args: ['submit', ['$event']]
            }] } });

/*
 * Public API Surface of my-lib
 */

/**
 * Generated bundle index. Do not edit.
 */

export { FormValidateDirective };
//# sourceMappingURL=form-validate-angular.mjs.map
